<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[成长的困惑]]></title>
    <url>%2F2018%2F01%2F09%2F%E6%88%90%E9%95%BF%E7%9A%84%E5%9B%B0%E6%83%91%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[iOS 类扩展和分类]]></title>
    <url>%2F2018%2F01%2F09%2FiOS-%E7%B1%BB%E6%89%A9%E5%B1%95%E5%92%8C%E5%88%86%E7%B1%BB%2F</url>
    <content type="text"><![CDATA[category and extension的官方文档 类别的作用 将类的实现分散到多个不同文件或多个不同框架中：相当于文件瘦身（把类似作用的方法整理一块）方便代码管理 创建对私有方法的前向引用：如果其他类中的方法未实现，在你访问其他类的私有方法时编译器报错这时使用类别，在类别中声明这些方法（不必提供方法实现），编译器就不会再产生警告 向对象添加非正式协议：创建一个NSObject的类别称为 “创建一个非正式协议”，因为可以作为任何类的委托对象使用（当类别所在类和引用该类别的类同时实现一个方法时优先调用类别类的实现方法） 类别使用场景 类包含了很多个方法实现，而这些方法需要不同团队的成员来实现 当你在使用基础类库中的类时，你不想继承这些类而只想添加一些方法时。 调用其他类的私有方法 当非正式协议使用 举例说明 1234#import "ClassName.h"@interface ClassName ( CategoryName )// method declarations@end 类别添加自定义属性当向类别中添加自定义属性时会报instance variables may not be placed in categories错误 1234@interface LMReadingVC (Helper)&lt;UIToolbarDelegate&gt;&#123;NSString *topbar;/*报错instance variables may not be placed in categories */&#125; 正确添加方法12345678910111213141516171819@interface NSObject (XY)@property (nonatomic, strong) id tempObject;@end@implementation NSObject (XY)@dynamic tempObject;- (id)tempObject- &#123; id object = objc_getAssociatedObject(self,NSObject_key_tempObject); return object;&#125;- (void)setTempObject:(id)tempObject&#123;[self willChangeValueForKey:@"tempObject"];objc_setAssociatedObject(self, NSObject_key_tempObject, tempObject, OBJC_ASSOCIATION_RETAIN_NONATOMIC);[self didChangeValueForKey:@"tempObject"];&#125;@end Extension简要说明Extension非常像是没有命名的类别。123@interface MyClass : NSObject @property (retain, readonly) float value; @end //一般的时候，Extension都是放在.m文件中@implementation的上方。123@interface MyClass () @property (retain, readwrite) float value; @end 使用Extension需要注意的点：(1) Extension中的方法必须在@implementation中实现，否则编译会报错。 偷懒引用网友例子说明创建对私有方法的前向引用123456789101112131415161718 /*********person.h***********/#import &lt;Foundation/Foundation.h&gt;@interface person : NSObject+ (void)getAge;@end/*********person.m***********/#import "person.h"@interface person ()+ (void)getName;@end@implementation person+ (void)getAge &#123;NSLog(@"age:18");&#125;+ (void)getName &#123;NSLog(@"name:XXX");&#125;@end 然后正常情况下别的类想要直接调用getName是调用不了的，会报错然后我又创建了一个Category,在.h里声明方法getName，.m什么也没写1234#import "person.h"@interface person (TEXT)+ (void)getName;@end 然后在要调用的类import这个Category，再去运行上图的代码，就不会报错，而且getName的私有方法也执行了]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>...</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F01%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
